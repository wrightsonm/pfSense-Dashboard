{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 20,
  "iteration": 1646853078282,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "datasource": {
        "uid": "$dataSource"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 16,
      "panels": [],
      "title": "Hardware",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#299c46",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 0.7
              },
              {
                "color": "#d44a3a",
                "value": 1.5
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 0,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 49,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "",
          "groupBy": [],
          "measurement": "system",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"system\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"n_users\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"$Host\")\r\n  |> rename(columns:{_value: \"n_users\"})\r\n  |> keep(columns:[\"n_users\"])\r\n  |> last(column: \"n_users\") ",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "n_users"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "timeFrom": "30s",
      "title": "Active Users",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "displayName": "CPU",
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 70
              },
              {
                "color": "red",
                "value": 85
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 2,
        "x": 2,
        "y": 1
      },
      "id": 8,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "text": {}
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "CPU Total",
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "previous"
              ],
              "type": "fill"
            }
          ],
          "measurement": "cpu",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cpu\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"usage_idle\")\r\n  |> filter(fn: (r) => r[\"cpu\"] == \"cpu-total\")\r\n  |> filter(fn: (r) => r[\"host\"] ==  \"$Host\" )\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _value: r._value * -1.0 + 100.0 }))\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "usage_idle"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  " * -1 + 100"
                ],
                "type": "math"
              }
            ]
          ],
          "tags": [
            {
              "key": "cpu",
              "operator": "=",
              "value": "cpu-total"
            },
            {
              "condition": "AND",
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "CPU Total",
      "type": "gauge"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "decimals": 2,
      "fieldConfig": {
        "defaults": {
          "unit": "percent"
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 4,
        "y": 1
      },
      "hiddenSeries": false,
      "id": 6,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "rightSide": true,
        "show": true,
        "sort": "avg",
        "sortDesc": false,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "repeatDirection": "h",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": true,
      "targets": [
        {
          "alias": "$tag_cpu",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "cpu"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "cpu",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cpu\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"usage_system\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:pipe}$/)\r\n  |> filter(fn: (r) => r[\"cpu\"] =~ /^${CPU:pipe}$/)\r\n  //this aggregatewindow function will unfortunately artificially reduce the max value shown on the chart\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> keep(columns:[\"_time\",\"cpu\",\"_value\"])\r\n\r\n  |> yield(name: \"mean\")",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "usage_system"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "cpu",
              "operator": "=~",
              "value": "/^$CPU$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "CPU",
      "tooltip": {
        "shared": true,
        "sort": 2,
        "value_type": "individual"
      },
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {}
        }
      ],
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:283",
          "decimals": 0,
          "format": "percent",
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "$$hashKey": "object:284",
          "decimals": 2,
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "decimals": 0,
          "displayName": "",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "locale"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 12,
        "y": 1
      },
      "id": 220,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "groupBy": [],
          "measurement": "pf",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"pf\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"match\" or r[\"_field\"] == \"state-mismatch\" or r[\"_field\"] == \"state-insert\")\r\n  |> filter(fn: (r) => r[\"host\"] ==  \"$Host\" )\r\n  |> drop(columns:[\"host\",\"_measurement\",\"_start\",\"_stop\"])\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> rename(columns:{match:\"Match\",\"state-insert\":\"State Insert\",\"state-mismatch\":\"State Mismatch\"})  \r\n  |> last(column: \"_time\")\r\n",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "match"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Match"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "state-mismatch"
                ],
                "type": "field"
              },
              {
                "params": [
                  "State Mismatch"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "state-insert"
                ],
                "type": "field"
              },
              {
                "params": [
                  "State Insert"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "PF Information",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "Match",
                "State Insert",
                "State Mismatch"
              ]
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "links": []
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 7,
        "x": 17,
        "y": 1
      },
      "hiddenSeries": false,
      "id": 18,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$col",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "system",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"system\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"load1\" or r[\"_field\"] == \"load5\" or r[\"_field\"] == \"load15\")\r\n  |> filter(fn: (r) => r[\"host\"] ==  \"$Host\" )  \r\n  |> drop(columns:[\"host\",\"_measurement\",\"_start\",\"_stop\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> keep(columns: [\"_time\",\"load1\",\"load5\",\"load15\"])\r\n\r\n  \r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "load1"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "load1"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "load5"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "load5"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "load15"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "load15"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Load",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "_time": 0,
              "load1": 1,
              "load15": 3,
              "load5": 2
            },
            "renameByName": {}
          }
        }
      ],
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:168",
          "decimals": 1,
          "format": "none",
          "label": "",
          "logBase": 1,
          "show": true
        },
        {
          "$$hashKey": "object:169",
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#299c46",
                "value": null
              },
              {
                "color": "rgba(237, 129, 40, 0.89)",
                "value": 0.7
              },
              {
                "color": "#d44a3a",
                "value": 1.5
              }
            ]
          },
          "unit": "none"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 2,
        "x": 0,
        "y": 4
      },
      "hideTimeOverride": true,
      "id": 45,
      "links": [],
      "maxDataPoints": 100,
      "options": {
        "colorMode": "none",
        "graphMode": "none",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/^uptime_format$/",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "Load 15m",
          "groupBy": [],
          "measurement": "system",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"system\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"uptime_format\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"$Host\")\r\n  |> rename(columns:{_value: \"uptime_format\"})\r\n  |> keep(columns:[\"uptime_format\"])\r\n  |> last(column: \"uptime_format\") ",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "uptime_format"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "timeFrom": "30s",
      "title": "Uptime",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false,
            "width": 70
          },
          "decimals": 0,
          "displayName": "",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Running"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 80
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "idle"
            },
            "properties": [
              {
                "id": "custom.width"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "zombies"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 108
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "wait"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 77
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "blocked"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 92
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "sleeping"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 87
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 5,
        "x": 12,
        "y": 4
      },
      "id": 219,
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "groupBy": [],
          "measurement": "processes",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"processes\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"idle\" or r[\"_field\"] == \"sleeping\" or r[\"_field\"] == \"wait\" or r[\"_field\"] == \"blocked\" or r[\"_field\"] == \"running\" or r[\"_field\"] == \"stopped\" or r[\"_field\"] == \"total\" or r[\"_field\"] == \"zombies\")\r\n  |> filter(fn: (r) => r[\"host\"] ==  \"$Host\" )\r\n  |> drop(columns:[\"host\",\"_measurement\",\"_start\",\"_stop\"])\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> last(column: \"_time\")\r\n",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "running"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Running"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "idle"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "sleeping"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "wait"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "blocked"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "zombies"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "Process Information",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "blocked",
                "idle",
                "sleeping",
                "wait",
                "zombies",
                "running",
                "stopped",
                "total"
              ]
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "decimals": 2,
      "description": "",
      "fieldConfig": {
        "defaults": {
          "unit": "percent"
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 0,
        "y": 7
      },
      "hiddenSeries": false,
      "id": 223,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "repeatDirection": "h",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$tag_path",
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "path"
              ],
              "type": "tag"
            }
          ],
          "measurement": "disk",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"disk\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used_percent\")\r\n  |> filter(fn: (r) => r[\"device\"] != \"devfs\" and r[\"device\"] =~ /^${Disk:regex}$/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"path\"])\r\n  |> keep(columns: [\"_time\",\"path\",\"used_percent\"])\r\n  |> rename(columns: {\"used_percent\":\"_value\"})\r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "used_percent"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "device",
              "operator": "!=",
              "value": "devfs"
            },
            {
              "condition": "AND",
              "key": "device",
              "operator": "=~",
              "value": "/^$Disk$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Disk Utilization",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:340",
          "format": "percent",
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "$$hashKey": "object:341",
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "unit": "percent"
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 8,
        "y": 7
      },
      "hiddenSeries": false,
      "id": 17,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": true,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$col",
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "mem",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mem\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used_percent\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:pipe}$/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> keep(columns:[\"_time\",\"_value\"])\r\n  |> rename(columns: {_value:\"Ram Used\"})\r\n\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "used_percent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Ram Used"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        },
        {
          "alias": "$col",
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "swap",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"swap\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"used_percent\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:pipe}$/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> keep(columns:[\"_time\",\"_value\"])\r\n  |> rename(columns: {_value:\"Swap Used\"})\r\n\r\n",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "used_percent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "SWAP Used"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        },
        {
          "alias": "$col",
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "swap",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "//Pfsense < v2.6 had a bug where a a memory leak in pscsd could use all of the laundry space\r\nfrom(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"mem\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:pipe}$/)\r\n  |> filter(fn: (r) => r[\"_field\"] == \"laundry\" or r[\"_field\"] == \"total\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> map(fn: (r) => ({r with laundry_percent:float(v:r.laundry) / float(v:r.total) * float(v: 100) }))\r\n  |> keep(columns:[\"_time\",\"laundry_percent\"])\r\n  |> rename(columns: {laundry_percent:\"Laundry Ram Used\"})",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "used_percent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "SWAP Used"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Ram",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:427",
          "format": "percent",
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "$$hashKey": "object:428",
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "links": []
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 16,
        "y": 7
      },
      "hiddenSeries": false,
      "id": 103,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": true,
        "rightSide": true,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$tag_sensor",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "sensor"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "temperature",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"temperature\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"degrees\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:pipe}$/)\r\n  |> filter(fn: (r) => r[\"sensor\"] =~ /^${Sensor:regex}$/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> keep(columns:[\"_time\",\"sensor\",\"_value\"])\r\n",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "degrees"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "sensor",
              "operator": "=~",
              "value": "/^$Sensor$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Temperature Sensors",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:514",
          "format": "celsius",
          "logBase": 1,
          "show": true
        },
        {
          "$$hashKey": "object:515",
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "6Q5QOXXGk"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 13
      },
      "id": 525,
      "panels": [],
      "title": "pfBlocker Stats",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "links": [],
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Source IP"
            },
            "properties": [
              {
                "id": "links",
                "value": [
                  {
                    "targetBlank": true,
                    "title": "Show in GreyNoise",
                    "url": "https://viz.greynoise.io/query/?gnql=${__value.raw}"
                  }
                ]
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 0,
        "y": 14
      },
      "id": 160,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "src_ip"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_ipblock",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\r\n\r\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"in\" and r.protocolid =~ /^(6$|17$)/)\r\n  |> group(columns:[\"src_ip\"])\r\n  |> rename(columns:{action: \"Blocked\"})\r\n  |> count(column: \"Blocked\")\r\n  \r\n  |> group()  //use group to ungroup data and return to a single table\r\n  |> top(n:10, columns: [\"Blocked\"])  \r\n  |> sort(columns: [\"Blocked\"], desc: true)\r\n  |> yield()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            }
          ]
        }
      ],
      "title": "IP - Top 10 Blocked - IN",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "src_ip",
                "Blocked",
                "dest_ip"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "src_ip": 0,
              "top": 1
            },
            "renameByName": {
              "src_ip": "Source IP",
              "top": "Blocked"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Source IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 163
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 133
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 3,
        "y": 14
      },
      "id": 716,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "groupBy": [
            {
              "params": [
                "src_ip"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_ipblock",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\r\n\r\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"out\" and r.protocolid =~ /^(6$|17$)/)\r\n  |> group(columns:[\"src_ip\",\"dest_ip\"])\r\n  |> rename(columns:{action: \"Blocked\"})\r\n  |> count(column: \"Blocked\")\r\n  \r\n  |> group()  //use group to ungroup data and return to a single table\r\n  |> top(n:10, columns: [\"Blocked\"])  \r\n  |> sort(columns: [\"Blocked\"], desc: true)\r\n  |> yield()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            }
          ]
        }
      ],
      "title": "IP - Top 10 Blocked - OUT",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "src_ip",
                "dest_ip"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "src_ip": 0,
              "top": 1
            },
            "renameByName": {
              "dest_ip": "Dest IP",
              "src_ip": "Source IP",
              "top": "Blocked"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 4000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 6,
        "y": 14
      },
      "id": 642,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$col",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tail_ip_block_log",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\r\n\r\n  |> filter(fn: (r) => r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"host\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\")\r\n  |> group(columns:[\"direction\"])\r\n  |> rename(columns:{action: \"Blocked\"})\r\n  |> count(column: \"Blocked\")",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              },
              {
                "params": [
                  "Blocked Inbound"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            }
          ]
        }
      ],
      "title": "IP - Blocked Packet Stats",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "(.*) in",
            "renamePattern": "$1 Inbound"
          }
        },
        {
          "id": "renameByRegex",
          "options": {
            "regex": "(.*) out",
            "renamePattern": "$1 Outbound"
          }
        }
      ],
      "type": "stat"
    },
    {
      "circleMaxSize": "20",
      "circleMinSize": "1",
      "colors": [
        "#37872D",
        "#E0B400",
        "#FA6400",
        "#C4162A"
      ],
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "decimals": 0,
      "description": "",
      "esMetric": "Count",
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 9,
        "y": 14
      },
      "hideEmpty": false,
      "hideZero": false,
      "id": 563,
      "initialZoom": 1,
      "locationData": "countries",
      "mapCenter": "(0°, 0°)",
      "mapCenterLatitude": 0,
      "mapCenterLongitude": 0,
      "maxDataPoints": 1000,
      "mouseWheelZoom": false,
      "showLegend": false,
      "stickyLabels": false,
      "tableQueryOptions": {
        "geohashField": "geohash",
        "latitudeField": "latitude",
        "longitudeField": "longitude",
        "metricField": "metric",
        "queryType": "geohash"
      },
      "targets": [
        {
          "alias": "$tag_geoip_code",
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "10m"
              ],
              "type": "time"
            },
            {
              "params": [
                "geoip_code"
              ],
              "type": "tag"
            }
          ],
          "measurement": "tail_ip_block_log",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\" )\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host}$/)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> filter(fn: (r) => r[\"direction\"] == \"in\" and r[\"action\"] == \"block\")\r\n  |> keep(columns: [\"_time\",\"geoip_code\"])\r\n  //give each row a 1 value so that we can use count during the row aggregation\r\n  |> map(fn: (r) => ({ r with _value: 1 }))\r\n  |> group(columns: [\"geoip_code\"])  \r\n  |> window(every: 10m)\r\n  |> count()\r\n  |> duplicate(column: \"_stop\", as: \"_time\")\r\n  |> keep(columns: [\"_time\",\"geoip_code\",\"_value\"])\r\n  \r\n\r\n  ",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            }
          ]
        }
      ],
      "thresholds": "10,100,1000",
      "title": "IP - Src/Dst Blocked Geo",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "_value (.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "grafana-worldmap-panel",
      "unitPlural": "",
      "unitSingle": "",
      "valueName": "total"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 4000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 15,
        "y": 14
      },
      "id": 718,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$col",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "tail_dnsbl_log",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_dnsbl_log\")\r\n//host is still a tag atm\r\n  |> filter(fn: (r) => r.host =~ /^.*$/)\r\n \r\n|> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n|> group()\r\n|> rename(columns:{duplicateeventstatus:\"Blocked Domain Queries\"})\r\n|> count(column:\"Blocked Domain Queries\")\r\n\r\n",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "duplicateeventstatus"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              },
              {
                "params": [
                  "Blocked Domain Queries"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "DNSBL - Blocked Domain Queries",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 18,
        "y": 14
      },
      "id": 717,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "groupBy": [
            {
              "params": [
                "tld"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_dnsbl",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_dnsbl_log\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  //src_ip is currently a tag\r\n  |> group(columns: [\"src_ip\"])\r\n|> filter(fn: (r) => r.host =~ /^.*$/)\r\n  |> keep(columns: [\"_time\",\"host\",\"src_ip\",\"domain\"])\r\n  //counting any column that isnt src_ip\r\n  |> count(column:\"domain\")  \r\n  |> rename(columns:{domain:\"Blocked\"})\r\n  |> group()  //use group to ungroup data and return to a single table\r\n  |> top(n:10, columns: [\"Blocked\"])  \r\n  |> sort(columns: [\"Blocked\"], desc: true)\r\n  |> yield()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "domain"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "DNSBL- Source IP - Top 10 Blocked",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "src_ip",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "src_ip": 0,
              "top": 1
            },
            "renameByName": {
              "count": "Blocked",
              "src_ip": "Source IP",
              "tld": "TLD",
              "top": "Blocked"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "TLD"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 231
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Blocked"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 69
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 21,
        "y": 14
      },
      "id": 719,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "groupBy": [
            {
              "params": [
                "tld"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_dnsbl",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_dnsbl_log\")\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  //tld is currently a tag\r\n  |> group(columns: [\"tld\"])\r\n|> filter(fn: (r) => r.host =~ /^.*$/)\r\n  |> keep(columns: [\"_time\",\"host\",\"tld\",\"domain\"])\r\n  //counting any column that isnt tld\r\n  |> count(column:\"domain\")  \r\n  |> rename(columns:{domain:\"Blocked\"})\r\n  |> group()  //use group to ungroup data and return to a single table\r\n  |> top(n:10, columns: [\"Blocked\"])  \r\n  |> sort(columns: [\"Blocked\"], desc: true)\r\n  |> yield()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "domain"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "DNSBL - Top 10 Blocked Domains",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "tld",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "tld": 0,
              "top": 1
            },
            "renameByName": {
              "count": "Blocked",
              "src_ip": "Source IP",
              "tld": "TLD",
              "top": "Blocked"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "datasource": {
        "type": "influxdb",
        "uid": "6Q5QOXXGk"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 23
      },
      "id": 1005,
      "panels": [],
      "title": "pfBlocker Details",
      "type": "row"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 0,
        "y": 24
      },
      "id": 1059,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "groupBy": [
            {
              "params": [
                "src_ip"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_ipblock",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"in\" and r.protocolid =~ /^(6$|17$)/)\n  |> group(columns:[\"src_ip\",\"dest_ip\",\"dest_port\"])\n  |> rename(columns:{action: \"Blocked\"})\n  |> count(column: \"Blocked\")\n  \n  |> group()  //use group to ungroup data and return to a single table\n  |> top(n:10, columns: [\"Blocked\"])  \n  |> sort(columns: [\"Blocked\"], desc: true)\n  |> yield()\n  ",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            }
          ]
        }
      ],
      "title": "IP - Top 10 Blocked - IN (By Host/Port)",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "dest_ip",
                "dest_port",
                "src_ip",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "dest_ip": 1,
              "dest_port": 2,
              "src_ip": 0,
              "top": 3
            },
            "renameByName": {
              "Blocked": "Count",
              "dest_ip": "Dest IP",
              "dest_port": "Dest Port",
              "foo": "",
              "src_ip": "Source IP",
              "top": "Blocked Count"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 6,
        "y": 24
      },
      "id": 1051,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "groupBy": [
            {
              "params": [
                "src_ip"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_ipblock",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"in\" and r.protocolid =~ /^(6$|17$)/)\n  |> group(columns:[\"dest_port\"])\n  |> rename(columns:{action: \"Blocked\"})\n  |> count(column: \"Blocked\")\n  \n  |> group()  //use group to ungroup data and return to a single table\n  |> top(n:10, columns: [\"Blocked\"])  \n  |> sort(columns: [\"Blocked\"], desc: true)\n  |> yield()",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            }
          ]
        }
      ],
      "title": "Port - Top 10 Blocked - IN",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "dest_port",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "dest_port": 0,
              "top": 1
            },
            "renameByName": {
              "Blocked": "",
              "dest_port": "Port",
              "src_ip": "Source IP",
              "top": "Blocked Count"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 4,
        "x": 10,
        "y": 24
      },
      "id": 1066,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "feed_name"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "measurement": "tail_dnsbl_log",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_dnsbl_log\")\r\n  |> group(columns:[\"blocklist\",\"feed_name\"])\r\n  |> count(column: \"_value\")\r\n  |> rename(columns: { _value: \"Count\"})\r\n  |> group()  //use group to ungroup data and return to a single table\r\n  |> top(n:10, columns: [\"Count\"])  \r\n  |> sort(columns: [\"Count\"], desc: true)\r\n  |> yield()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "blockmethod"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "Top 10 DNSBL Feeds",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "feed_name",
                "Count",
                "blocklist"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "dest_port": 0,
              "top": 1
            },
            "renameByName": {
              "blocklist": "Block List",
              "count": "Blocked Clount",
              "count_blockmethod": "Blocked Count",
              "dest_port": "Port",
              "feed_name": "Feed Name",
              "src_ip": "Source IP",
              "top": "Blocked Count"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 16,
        "y": 24
      },
      "id": 1055,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "groupBy": [
            {
              "params": [
                "src_ip"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_ipblock",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"out\" and r.protocolid =~ /^(6$|17$)/)\n  |> group(columns:[\"dest_port\"])\n  |> rename(columns:{action: \"Blocked\"})\n  |> count(column: \"Blocked\")\n  \n  |> group()  //use group to ungroup data and return to a single table\n  |> top(n:10, columns: [\"Blocked\"])  \n  |> sort(columns: [\"Blocked\"], desc: true)\n  |> yield()",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            }
          ]
        }
      ],
      "title": "Port - Top 10 Blocked - OUT",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "dest_port",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "dest_port": 0,
              "top": 1
            },
            "renameByName": {
              "dest_port": "Port",
              "src_ip": "Source IP",
              "top": "Blocked Count"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 5,
        "x": 19,
        "y": 24
      },
      "id": 1063,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "groupBy": [
            {
              "params": [
                "src_ip"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_ipblock",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"out\" and r.protocolid =~ /^(6$|17$)/)\n  |> group(columns:[\"src_ip\",\"dest_ip\",\"dest_port\"])\n  |> rename(columns:{action: \"Blocked\"})\n  |> count(column: \"Blocked\")\n  \n  |> group()  //use group to ungroup data and return to a single table\n  |> top(n:10, columns: [\"Blocked\"])  \n  |> sort(columns: [\"Blocked\"], desc: true)\n  |> yield()\n  ",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            }
          ]
        }
      ],
      "title": "IP - Top 10 Blocked - OUT (By Host/Port)",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "dest_ip",
                "dest_port",
                "src_ip",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "dest_ip": 1,
              "dest_port": 2,
              "src_ip": 0,
              "top": 3
            },
            "renameByName": {
              "dest_ip": "Dest IP",
              "dest_port": "Dest Port",
              "foo": "",
              "src_ip": "Source IP",
              "top": "Blocked Count"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 105
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 128
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Source IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 122
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Protocol"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 6,
        "x": 0,
        "y": 33
      },
      "id": 1061,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "groupBy": [
            {
              "params": [
                "src_ip"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_ipblock",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"in\" and r.protocolid =~ /^(6$|17$)/)\n  |> group(columns:[\"src_ip\",\"dest_ip\",\"protocol\"])\n  |> rename(columns:{action: \"Blocked\"})\n  |> count(column: \"Blocked\")\n  \n  |> group()  //use group to ungroup data and return to a single table\n  |> top(n:10, columns: [\"Blocked\"])  \n  |> sort(columns: [\"Blocked\"], desc: true)\n  |> yield()",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            }
          ]
        }
      ],
      "title": "IP - Top 10 Blocked - IN (By Host/Protocol)",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "protocol",
                "dest_ip",
                "src_ip",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "dest_ip": 1,
              "protocol": 2,
              "src_ip": 0,
              "top": 3
            },
            "renameByName": {
              "dest_ip": "Dest IP",
              "dest_port": "Dest Port",
              "foo": "",
              "protocol": "Protocol",
              "src_ip": "Source IP",
              "top": "Blocked Count"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": []
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 6,
        "y": 33
      },
      "id": 1053,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_protocol",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"in\")\n  |> group(columns:[\"protocol\"])\n  |> rename(columns:{action: \"Blocked\"})\n  |> count(column: \"Blocked\")\n  \n  |> group()  //use group to ungroup data and return to a single table\n  |> top(n:10, columns: [\"Blocked\"])  \n  |> sort(columns: [\"Blocked\"], desc: true)\n  |> yield()",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Protocol - Top 10 Blocked - IN",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "protocol",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "blocked": "Blocked Count",
              "protocol": "Protocol"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 4,
        "x": 10,
        "y": 33
      },
      "id": 1127,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "feed_name"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "measurement": "tail_dnsbl_log",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\r\n  |> group(columns:[\"feed_name\"])\r\n  |> count(column: \"_value\")\r\n  |> rename(columns: { _value: \"Count\"})\r\n  |> group()  //use group to ungroup data and return to a single table\r\n  |> top(n:10, columns: [\"Count\"])  \r\n  |> sort(columns: [\"Count\"], desc: true)\r\n  |> yield()",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "blockmethod"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "Top 10 IP Block Feeds",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "feed_name",
                "Count"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "dest_port": 0,
              "top": 1
            },
            "renameByName": {
              "count": "Blocked Clount",
              "count_blockmethod": "Blocked Count",
              "dest_port": "Port",
              "feed_name": "Feed Name",
              "src_ip": "Source IP",
              "top": "Blocked Count"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": []
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 16,
        "y": 33
      },
      "id": 1057,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_protocol",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"out\" and r.protocolid =~ /^(6$|17$)/)\n  |> group(columns:[\"protocol\"])\n  |> rename(columns:{action: \"Blocked\"})\n  |> count(column: \"Blocked\")\n  \n  |> group()  //use group to ungroup data and return to a single table\n  |> top(n:10, columns: [\"Blocked\"])  \n  |> sort(columns: [\"Blocked\"], desc: true)\n  |> yield()",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Protocol - Top 10 Blocked - OUT",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "protocol",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {},
            "renameByName": {
              "blocked": "Blocked Count",
              "protocol": "Protocol"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "auto",
            "filterable": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Dest Port"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 105
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Dest IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 128
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Source IP"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 122
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Protocol"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 5,
        "x": 19,
        "y": 33
      },
      "id": 1065,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Blocked Count"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "$tag_src_ip",
          "groupBy": [
            {
              "params": [
                "src_ip"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "",
          "measurement": "tail_ipblock",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"tail_ip_block_log\")\n\n  |> filter(fn: (r) => r[\"_field\"] == \"src_ip\" or r[\"_field\"] == \"dest_ip\" or r[\"_field\"] == \"dest_port\" or r[\"_field\"] == \"action\" or r[\"_field\"] == \"direction\" or r[\"_field\"] == \"protocolid\" or r[\"_field\"] == \"host\")\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> filter(fn: (r) => r.host =~ /^.*$/ and r.action == \"block\" and r.direction == \"out\" and r.protocolid =~ /^(6$|17$)/)\n  |> group(columns:[\"src_ip\",\"dest_ip\",\"protocol\"])\n  |> rename(columns:{action: \"Blocked\"})\n  |> count(column: \"Blocked\")\n  \n  |> group()  //use group to ungroup data and return to a single table\n  |> top(n:10, columns: [\"Blocked\"])  \n  |> sort(columns: [\"Blocked\"], desc: true)\n  |> yield()",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "action"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "count"
              }
            ]
          ],
          "slimit": "",
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "action",
              "operator": "=",
              "value": "block"
            },
            {
              "condition": "AND",
              "key": "direction",
              "operator": "=",
              "value": "in"
            }
          ]
        }
      ],
      "title": "IP - Top 10 Blocked - OUT (By Host/Protocol)",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "protocol",
                "dest_ip",
                "src_ip",
                "Blocked"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "dest_ip": 1,
              "protocol": 2,
              "src_ip": 0,
              "top": 3
            },
            "renameByName": {
              "dest_ip": "Dest IP",
              "dest_port": "Dest Port",
              "foo": "",
              "protocol": "Protocol",
              "src_ip": "Source IP",
              "top": "Blocked Count"
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 42
      },
      "id": 1195,
      "panels": [],
      "title": "Unbound DNS Stats",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 0,
        "y": 43
      },
      "id": 1263,
      "options": {
        "legend": {
          "calcs": [
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"unbound\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"total_num_cachemiss\" or r[\"_field\"] == \"total_num_queries\" or r[\"_field\"] == \"total_num_cachehits\")\r\n  |> filter(fn: (r) => r[\"host\"] ==  \"${Host}\" )\r\n  |> keep(columns: [\"_time\",\"_field\",\"_value\"])    \r\n  |> aggregateWindow(every: v.windowPeriod, fn: sum, createEmpty: false)",
          "refId": "A"
        }
      ],
      "title": "Cache Queries",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "total_num_(.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "log": 2,
              "type": "log"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "reqps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 10,
        "x": 7,
        "y": 43
      },
      "id": 1397,
      "options": {
        "legend": {
          "calcs": [
            "max",
            "mean",
            "lastNotNull"
          ],
          "displayMode": "table",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"unbound\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"total_num_queries\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"${Host}\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> derivative(unit: 1s, nonNegative: true, columns: [\"_value\"], timeColumn: \"_time\")\r\n  |> keep(columns: [\"_time\",\"_field\",\"_value\"])    \r\n  |> yield()",
          "refId": "A"
        }
      ],
      "title": "Cache Query Rate",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "total_num_(.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "${dataSource}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": []
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 17,
        "y": 43
      },
      "id": 1330,
      "options": {
        "displayLabels": [
          "percent"
        ],
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "values": [
            "value",
            "percent"
          ]
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "${dataSource}"
          },
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"unbound\")  \r\n  |> filter(fn: (r) => r[\"_field\"] == \"total_num_cachemiss\" or r[\"_field\"] == \"total_num_cachehits\")\r\n  |> filter(fn: (r) => r[\"host\"] ==  \"${Host}\" )\r\n  |> keep(columns: [\"_time\",\"_field\",\"_value\"])\r\n  |> aggregateWindow(every: v.windowPeriod, fn: sum, createEmpty: false)",
          "refId": "A"
        }
      ],
      "title": "DNS Cache Hit / Miss",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "total_num_(.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "piechart"
    },
    {
      "collapsed": false,
      "datasource": {
        "uid": "$dataSource"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 51
      },
      "id": 143,
      "panels": [],
      "title": "Network Stats",
      "type": "row"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "links": []
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 52
      },
      "hiddenSeries": false,
      "id": 4,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": true,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "repeatDirection": "h",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$tag_gateway_name",
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "gateway_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "gateways",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gateways\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"delay\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"gateway_name\"] =~ /^${Gateway:regex}$/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> keep(columns:[\"_time\",\"gateway_name\",\"_value\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "delay"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "gateway_name",
              "operator": "=~",
              "value": "/^$Gateway$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Gateway RTT - $Gateway ",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:433",
          "format": "ms",
          "label": "",
          "logBase": 10,
          "show": true
        },
        {
          "$$hashKey": "object:434",
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "color-text",
            "filterable": true
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "DOWN"
                },
                "1": {
                  "text": "UP"
                },
                "2": {
                  "text": "UNKNOWN"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(255, 255, 255)",
                "value": null
              },
              {
                "color": "dark-red",
                "value": 0
              },
              {
                "color": "green",
                "value": 1
              },
              {
                "color": "dark-orange",
                "value": 2
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Interface"
              },
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "custom.align"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "FriendlyName"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 126
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Interface"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 121
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 13,
        "x": 11,
        "y": 52
      },
      "id": 194,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": false,
            "displayName": "Interface"
          }
        ]
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "",
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "name"
              ],
              "type": "tag"
            }
          ],
          "limit": "1",
          "measurement": "interface",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"name\"])\r\n  |> sort(columns: [\"_time\"])\r\n  |> last(column: \"_time\")\r\n  |> group()  //use group to ungroup data and return to a single table\r\n  //|> keep(columns:[\"name\",\"friendlyname\",\"ip4_address\",\"mac_address\",\"status\",\"ip6_address\"])\r\n  |> rename(columns: {\"name\":\"Interface\",friendlyname:\"FriendlyName\",\"ip4_address\":\"IPv4 Address\",\"mac_address\":\"Physical Address\",\r\n  \"status\":\"Status\",\"ip6_address\":\"IPv6 Address\"})",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "friendlyname"
                ],
                "type": "field"
              },
              {
                "params": [
                  "FriendlyName"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "ip4_address"
                ],
                "type": "field"
              },
              {
                "params": [
                  "IPv4 Address"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "mac_address"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Physical Address"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "status"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Status"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "ip6_address"
                ],
                "type": "field"
              },
              {
                "params": [
                  "IPv6 Address"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "Interface Summary",
      "transformations": [
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "FriendlyName",
                "IPv4 Address",
                "Physical Address",
                "Status",
                "IPv6 Address",
                "Interface"
              ]
            }
          }
        },
        {
          "id": "organize",
          "options": {
            "excludeByName": {},
            "indexByName": {
              "FriendlyName": 1,
              "IPv4 Address": 2,
              "IPv6 Address": 3,
              "Interface": 0,
              "Physical Address": 4,
              "Status": 5
            },
            "renameByName": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "links": []
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 11,
        "x": 0,
        "y": 60
      },
      "hiddenSeries": false,
      "id": 487,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "repeatDirection": "h",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$tag_gateway_name",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "gateway_name"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "gateways",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gateways\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"loss\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"gateway_name\"] =~ /^${Gateway:regex}$/)\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> keep(columns:[\"_time\",\"gateway_name\",\"_value\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "loss"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "gateway_name",
              "operator": "=~",
              "value": "/^$Gateway$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "Gateway Loss - $Gateway ",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:573",
          "decimals": 0,
          "format": "percent",
          "label": "",
          "logBase": 1,
          "max": "100",
          "min": "0",
          "show": true
        },
        {
          "$$hashKey": "object:574",
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "left",
            "displayMode": "color-text",
            "filterable": true
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "color": "green",
                  "index": 1,
                  "text": "Online"
                },
                "1": {
                  "color": "red",
                  "index": 2,
                  "text": "Down"
                },
                "2": {
                  "color": "orange",
                  "index": 3,
                  "text": "Unavailable"
                },
                "none": {
                  "index": 0,
                  "text": "OK"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(255, 255, 255)",
                "value": null
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Default GW"
            },
            "properties": [
              {
                "id": "mappings",
                "value": [
                  {
                    "options": {
                      "0": {
                        "text": "False"
                      },
                      "1": {
                        "text": "True"
                      }
                    },
                    "type": "value"
                  }
                ]
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Interface"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 157
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Gateway Description"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 274
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 13,
        "x": 11,
        "y": 60
      },
      "id": 961,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "KEAQCLm7z"
          },
          "groupBy": [
            {
              "params": [
                "gateway_name"
              ],
              "type": "tag"
            }
          ],
          "hide": false,
          "limit": "1",
          "measurement": "gateways",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"gateways\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"gateway_name\"])\r\n  |> sort(columns: [\"_time\"])\r\n  |> last(column: \"_time\")\r\n  |> group()  //use group to ungroup data and return to a single table\r\n  ",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "gwdescr"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "source"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "monitor"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "defaultgw"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "status"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "substatus"
                ],
                "type": "field"
              }
            ],
            [
              {
                "params": [
                  "interface"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "title": "Gateway Summary - $Gateway",
      "transformations": [
        {
          "id": "organize",
          "options": {
            "excludeByName": {
              "gateway_name": false,
              "status": true,
              "status_code": false
            },
            "indexByName": {
              "Time": 0,
              "defaultgw": 6,
              "gateway_name": 1,
              "gwdescr": 3,
              "interface": 2,
              "monitor": 5,
              "source": 4,
              "status": 7,
              "substatus": 8
            },
            "renameByName": {
              "Time": "",
              "defaultgw": "Default GW",
              "gateway_name": "Gateway Name",
              "gwdescr": "Gateway Description",
              "interface": "Interface",
              "monitor": "Monitor IP",
              "source": "Gateway IP",
              "status": "Status",
              "status_code": "Status",
              "substatus": "Status Detail"
            }
          }
        },
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "Gateway Name",
                "Interface",
                "Gateway Description",
                "Gateway IP",
                "Monitor IP",
                "Default GW",
                "Status Detail",
                "Status"
              ]
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "datasource": {
        "uid": "$dataSource"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 68
      },
      "id": 14,
      "panels": [],
      "repeat": "WAN",
      "title": "WAN Interface - $WAN",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "color-text",
            "filterable": false
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "DOWN"
                },
                "1": {
                  "text": "UP"
                },
                "2": {
                  "text": "UNKNOWN"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(255, 255, 255)",
                "value": null
              },
              {
                "color": "red",
                "value": 0
              },
              {
                "color": "green",
                "value": 1
              },
              {
                "color": "orange",
                "value": 2
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Interface"
              },
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "custom.align"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 69
      },
      "id": 603,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "",
          "groupBy": [
            {
              "params": [
                "name"
              ],
              "type": "tag"
            }
          ],
          "limit": "1",
          "measurement": "interface",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"name\"] =~ /^${WAN:regex}$/)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"name\"])\r\n  |> last(column: \"_time\")\r\n  |> group()  //use group to ungroup data and return to a single table\r\n  //|> keep(columns:[\"name\",\"friendlyname\",\"ip4_address\",\"mac_address\",\"status\",\"ip6_address\"])\r\n  |> rename(columns: {\"name\":\"Interface\",friendlyname:\"FriendlyName\",\"ip4_address\":\"IPv4 Address\",\"mac_address\":\"Physical Address\",\r\n  \"status\":\"Status\",\"ip6_address\":\"IPv6 Address\"})",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "friendlyname"
                ],
                "type": "field"
              },
              {
                "params": [
                  "FriendlyName"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "ip4_address"
                ],
                "type": "field"
              },
              {
                "params": [
                  "IPv4 Address"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "mac_address"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Physical Address"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "status"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Status"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "name",
              "operator": "=~",
              "value": "/^$WAN$/"
            }
          ]
        }
      ],
      "title": "Interface summary",
      "transformations": [
        {
          "id": "merge",
          "options": {
            "reducers": []
          }
        },
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "name",
                "FriendlyName",
                "Physical Address",
                "Status",
                "IPv4 Address"
              ]
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "decimals": 2,
      "fieldConfig": {
        "defaults": {
          "links": []
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 0,
        "y": 72
      },
      "hiddenSeries": false,
      "id": 2,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": false,
        "rightSide": false,
        "show": true,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$tag_interface - $col",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "net",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${WAN:regex}$/)\r\n  |> filter(fn: (r)=> r[\"_field\"] == \"bytes_recv\" or r[\"_field\"] == \"bytes_sent\")\r\n  |> aggregateWindow(every: $__interval, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"interface\"])\r\n  |> derivative(columns: [\"bytes_recv\",\"bytes_sent\"], nonNegative: true, timeColumn: \"_time\", unit: 1s)\r\n  \r\n  |> keep(columns:[\"_time\",\"bytes_recv\",\"bytes_sent\"])",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "bytes_recv"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"bytes_recv\") / count(\"bytes_recv\")"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Bytes_Recv"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "bytes_sent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"bytes_sent\") / count(\"bytes_sent\")"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Bytes_Sent"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "interface",
              "operator": "=~",
              "value": "/^$WAN$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "WAN Traffic - $WAN (Bytes/sec)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:207",
          "decimals": 2,
          "format": "Bps",
          "label": "",
          "logBase": 2,
          "show": true
        },
        {
          "$$hashKey": "object:208",
          "decimals": 2,
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 9,
        "y": 72
      },
      "id": 247,
      "links": [],
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "repeatDirection": "v",
      "targets": [
        {
          "alias": "$tag_interface - $col",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "net",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${WAN:regex}$/)\r\n  |> aggregateWindow(every: $__interval, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"interface\"])\r\n  |> derivative(columns: [\"bytes_recv\",\"bytes_sent\"], nonNegative: true, timeColumn: \"_time\", unit: 1s)\r\n  |> keep(columns:[\"_time\",\"interface\",\"bytes_recv\",\"bytes_sent\"])",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "bytes_recv"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"bytes_recv\") / count(\"bytes_recv\") * 8"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Bits_Recv"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "bytes_sent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"bytes_sent\") / count(\"bytes_sent\") * 8"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Bits_Sent"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "interface",
              "operator": "=~",
              "value": "/^$WAN$/"
            }
          ]
        }
      ],
      "title": "WAN Traffic - $WAN (Bytes/sec)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 3,
        "x": 12,
        "y": 72
      },
      "hideTimeOverride": false,
      "id": 296,
      "links": [],
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "repeatDirection": "v",
      "targets": [
        {
          "alias": "$tag_interface - $col - This Month",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "net",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${WAN:regex}$/)\r\n  |> filter(fn: (r)=> r[\"_field\"] == \"bytes_recv\" or r[\"_field\"] == \"bytes_sent\")\r\n  |> aggregateWindow(every: 1h, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> difference(columns: [\"bytes_recv\",\"bytes_sent\"], nonNegative:true,keepFirst:false)\r\n  |> keep(columns:[\"_time\",\"interface\",\"bytes_recv\",\"bytes_sent\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "bytes_recv"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [],
                "type": "non_negative_difference"
              },
              {
                "params": [
                  "Bytes_Recv"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "bytes_sent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [],
                "type": "non_negative_difference"
              },
              {
                "params": [
                  "Bytes_Sent"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "interface",
              "operator": "=~",
              "value": "/^$WAN$/"
            }
          ]
        }
      ],
      "timeFrom": "now/M",
      "title": "WAN $WAN",
      "type": "stat"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "decimals": 2,
      "description": "",
      "fieldConfig": {
        "defaults": {
          "links": []
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 15,
        "y": 72
      },
      "hiddenSeries": false,
      "id": 322,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "hideZero": true,
        "max": true,
        "min": true,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "repeatDirection": "v",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$tag_interface - $col",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "net",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${WAN:regex}$/)\r\n  |> aggregateWindow(every: $__interval, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"interface\"])\r\n  |> derivative(columns: [\"packets_recv\",\"packets_sent\"], nonNegative: true, timeColumn: \"_time\", unit: 1s)\r\n  |> keep(columns:[\"_time\",\"interface\",\"packets_recv\",\"packets_sent\"])",
          "refId": "G",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "packets_recv"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"packets_recv\") / count(\"packets_recv\")"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Packets_Recv"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "packets_sent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"packets_sent\") / count(\"packets_sent\")"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Packets_Sent"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "interface",
              "operator": "=~",
              "value": "/^$WAN$/"
            },
            {
              "condition": "AND",
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        },
        {
          "alias": "$tag_interface - $col",
          "groupBy": [
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "net",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${WAN:regex}$/)\r\n  |> aggregateWindow(every: $__interval, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"interface\"])\r\n  |> keep(columns:[\"_time\",\"interface\",\"drop_in\",\"drop_out\",\"err_in\",\"err_out\"])",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "drop_in"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Drop_In"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "drop_out"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Drop_Out"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "err_in"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Err_In"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "err_out"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Err_Out"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "interface",
              "operator": "=~",
              "value": "/^$WAN$/"
            },
            {
              "condition": "AND",
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "WAN Throughput - $WAN",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:1364",
          "decimals": 2,
          "format": "short",
          "logBase": 2,
          "show": true
        },
        {
          "$$hashKey": "object:1365",
          "decimals": 2,
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "collapsed": false,
      "datasource": {
        "uid": "$dataSource"
      },
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 92
      },
      "id": 43,
      "panels": [],
      "repeat": "LAN_Interfaces",
      "title": "LAN Interface - $LAN_Interfaces",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "displayMode": "color-text",
            "filterable": false
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "DOWN"
                },
                "1": {
                  "text": "UP"
                },
                "2": {
                  "text": "UNKNOWN"
                }
              },
              "type": "value"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "rgb(255, 255, 255)",
                "value": null
              },
              {
                "color": "light-red",
                "value": 0
              },
              {
                "color": "light-green",
                "value": 1
              },
              {
                "color": "orange",
                "value": 2
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "name"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Interface"
              },
              {
                "id": "unit",
                "value": "short"
              },
              {
                "id": "decimals",
                "value": 2
              },
              {
                "id": "custom.align"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "FriendlyName"
            },
            "properties": [
              {
                "id": "custom.width"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 3,
        "w": 24,
        "x": 0,
        "y": 93
      },
      "id": 604,
      "links": [],
      "options": {
        "footer": {
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": []
      },
      "pluginVersion": "8.4.3",
      "targets": [
        {
          "alias": "",
          "groupBy": [
            {
              "params": [
                "name"
              ],
              "type": "tag"
            }
          ],
          "limit": "1",
          "measurement": "interface",
          "orderByTime": "ASC",
          "policy": "autogen",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"interface\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"name\"] =~ /^${LAN_Interfaces:regex}$/)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"name\"])\r\n  |> last(column: \"_time\")\r\n  |> group()  //use group to ungroup data and return to a single table\r\n  //|> keep(columns:[\"name\",\"friendlyname\",\"ip4_address\",\"mac_address\",\"status\",\"ip6_address\"])\r\n  |> rename(columns: {\"name\":\"Interface\",friendlyname:\"FriendlyName\",\"ip4_address\":\"IPv4 Address\",\"mac_address\":\"Physical Address\",\r\n  \"status\":\"Status\",\"ip6_address\":\"IPv6 Address\"})",
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "friendlyname"
                ],
                "type": "field"
              },
              {
                "params": [
                  "FriendlyName"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "ip4_address"
                ],
                "type": "field"
              },
              {
                "params": [
                  "IPv4 Address"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "mac_address"
                ],
                "type": "field"
              },
              {
                "params": [
                  "Physical Address"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "status"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              },
              {
                "params": [
                  "Status"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "name",
              "operator": "=~",
              "value": "/^$LAN_Interfaces$/"
            }
          ]
        }
      ],
      "title": "Interface summary",
      "transformations": [
        {
          "id": "merge",
          "options": {
            "reducers": []
          }
        },
        {
          "id": "filterFieldsByName",
          "options": {
            "include": {
              "names": [
                "name",
                "FriendlyName",
                "Physical Address",
                "Status",
                "IPv4 Address"
              ]
            }
          }
        }
      ],
      "type": "table"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "decimals": 2,
      "fieldConfig": {
        "defaults": {
          "links": []
        },
        "overrides": []
      },
      "fill": 1,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 9,
        "x": 0,
        "y": 96
      },
      "hiddenSeries": false,
      "id": 38,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "max": true,
        "min": true,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "repeatDirection": "v",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$tag_interface - $col",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "net",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${LAN_Interfaces:regex}$/)\r\n  |> aggregateWindow(every: $__interval, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"interface\"])\r\n  |> derivative(columns: [\"bytes_recv\",\"bytes_sent\"], nonNegative: true, timeColumn: \"_time\", unit: 1s)\r\n  |> keep(columns:[\"_time\",\"bytes_recv\",\"bytes_sent\"])",
          "refId": "D",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "bytes_recv"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"bytes_recv\") / count(\"bytes_recv\")"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Bytes_Recv"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "bytes_sent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"bytes_sent\") / count(\"bytes_sent\")"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Bytes_Sent"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "interface",
              "operator": "=~",
              "value": "/^$LAN_Interfaces$/"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "LAN Traffic - $LAN_Interfaces (Bytes/sec)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:1280",
          "decimals": 2,
          "format": "Bps",
          "label": "",
          "logBase": 2,
          "show": true
        },
        {
          "$$hashKey": "object:1281",
          "decimals": 2,
          "format": "short",
          "label": "",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "Bps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 9,
        "y": 96
      },
      "id": 248,
      "links": [],
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "repeatDirection": "v",
      "targets": [
        {
          "alias": "$tag_interface - $col",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "net",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${LAN_Interfaces:regex}$/)\r\n  |> aggregateWindow(every: $__interval, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"interface\"])\r\n  |> derivative(columns: [\"bytes_recv\",\"bytes_sent\"], nonNegative: true, timeColumn: \"_time\", unit: 1s)\r\n  |> keep(columns:[\"_time\",\"interface\",\"bytes_recv\",\"bytes_sent\"])",
          "rawQuery": false,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "bytes_recv"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"bytes_recv\") / count(\"bytes_recv\") * 8"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Bits_Recv"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "bytes_sent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"bytes_sent\") / count(\"bytes_sent\") * 8"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Bits_Sent"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "interface",
              "operator": "=~",
              "value": "/^$LAN_Interfaces$/"
            }
          ]
        }
      ],
      "title": "LAN Traffic - $LAN_Interfaces (Bytes/sec)",
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "fieldConfig": {
        "defaults": {
          "decimals": 2,
          "mappings": [
            {
              "options": {
                "match": "null",
                "result": {
                  "text": "N/A"
                }
              },
              "type": "special"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "bytes"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 12,
        "y": 96
      },
      "hideTimeOverride": false,
      "id": 297,
      "interval": "1h",
      "links": [],
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "horizontal",
        "reduceOptions": {
          "calcs": [
            "sum"
          ],
          "fields": "",
          "values": false
        },
        "text": {},
        "textMode": "auto"
      },
      "pluginVersion": "8.4.3",
      "repeatDirection": "v",
      "targets": [
        {
          "alias": "$tag_interface - $col - This Month",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "none"
              ],
              "type": "fill"
            }
          ],
          "measurement": "net",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${LAN_Interfaces:regex}$/)\r\n  |> filter(fn: (r)=> r[\"_field\"] == \"bytes_recv\" or r[\"_field\"] == \"bytes_sent\")\r\n  |> aggregateWindow(every: 1h, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> difference(columns: [\"bytes_recv\",\"bytes_sent\"], nonNegative:true,keepFirst:false)\r\n  |> keep(columns:[\"_time\",\"interface\",\"bytes_recv\",\"bytes_sent\"])",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "bytes_recv"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [],
                "type": "non_negative_difference"
              },
              {
                "params": [
                  "Bytes_Recv"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "bytes_sent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [],
                "type": "non_negative_difference"
              },
              {
                "params": [
                  "Bytes_Sent"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            },
            {
              "condition": "AND",
              "key": "interface",
              "operator": "=~",
              "value": "/^$LAN_Interfaces$/"
            }
          ]
        }
      ],
      "timeFrom": "now/M",
      "title": "LAN $LAN_Interfaces",
      "type": "stat"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": {
        "type": "influxdb",
        "uid": "KEAQCLm7z"
      },
      "decimals": 2,
      "description": "",
      "fieldConfig": {
        "defaults": {
          "links": []
        },
        "overrides": []
      },
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 7,
        "w": 9,
        "x": 15,
        "y": 96
      },
      "hiddenSeries": false,
      "id": 347,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "hideZero": true,
        "max": true,
        "min": true,
        "rightSide": false,
        "show": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "8.4.3",
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "repeatDirection": "v",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "alias": "$tag_interface - $col",
          "groupBy": [
            {
              "params": [
                "10s"
              ],
              "type": "time"
            },
            {
              "params": [
                "interface"
              ],
              "type": "tag"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "net",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${LAN_Interfaces:regex}$/)\r\n  |> aggregateWindow(every: $__interval, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"interface\"])\r\n  |> derivative(columns: [\"packets_recv\",\"packets_sent\"], nonNegative: true, timeColumn: \"_time\", unit: 1s)\r\n  |> keep(columns:[\"_time\",\"interface\",\"packets_recv\",\"packets_sent\"])",
          "refId": "G",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "packets_recv"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"packets_recv\") / count(\"packets_recv\")"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Packets_Recv"
                ],
                "type": "alias"
              }
            ],
            [
              {
                "params": [
                  "packets_sent"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "first"
              },
              {
                "params": [
                  "1s"
                ],
                "type": "derivative"
              },
              {
                "params": [
                  "* count(\"packets_sent\") / count(\"packets_sent\")"
                ],
                "type": "math"
              },
              {
                "params": [
                  "Packets_Sent"
                ],
                "type": "alias"
              }
            ]
          ],
          "tags": [
            {
              "key": "interface",
              "operator": "=~",
              "value": "/^$LAN_Interfaces$/"
            },
            {
              "condition": "AND",
              "key": "host",
              "operator": "=~",
              "value": "/^$Host$/"
            }
          ]
        },
        {
          "hide": false,
          "query": "from(bucket: \"${bucket}\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"net\")\r\n  |> filter(fn: (r) => r[\"host\"] =~ /^${Host:regex}$/)\r\n  |> filter(fn: (r) => r[\"interface\"] =~ /^${LAN_Interfaces:regex}$/)\r\n  |> aggregateWindow(every: $__interval, fn: mean, createEmpty: false)\r\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\r\n  |> group(columns: [\"interface\"])\r\n  |> keep(columns:[\"_time\",\"interface\",\"drop_in\",\"drop_out\",\"err_in\",\"err_out\"])",
          "refId": "A"
        }
      ],
      "thresholds": [],
      "timeRegions": [],
      "title": "LAN Throughput - $LAN_Interfaces",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "mode": "time",
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "$$hashKey": "object:1456",
          "decimals": 2,
          "format": "short",
          "logBase": 2,
          "show": true
        },
        {
          "$$hashKey": "object:1457",
          "decimals": 2,
          "format": "short",
          "logBase": 1,
          "show": true
        }
      ],
      "yaxis": {
        "align": false
      }
    }
  ],
  "refresh": "",
  "schemaVersion": 35,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "Flux-PfSense",
          "value": "Flux-PfSense"
        },
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "dataSource",
        "options": [],
        "query": "influxdb",
        "queryValue": "",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "type": "datasource"
      },
      {
        "current": {
          "selected": false,
          "text": "pfsense",
          "value": "pfsense"
        },
        "definition": "buckets() ",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "bucket",
        "options": [],
        "query": "buckets() ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "FQDN",
          "value": "FQDN"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "KEAQCLm7z"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: \"pfsense\", tag:\"host\")",
        "hide": 0,
        "includeAll": false,
        "label": "pfSense",
        "multi": false,
        "name": "Host",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(bucket: \"pfsense\", tag:\"host\")",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "KEAQCLm7z"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"device\",\r\n  predicate: (r) => r[\"_measurement\"] == \"disk\" and r[\"host\"] =~ /^$Host$/,\r\n  start: -30d\r\n)\r\n",
        "hide": 0,
        "includeAll": true,
        "multi": false,
        "name": "Disk",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"device\",\r\n  predicate: (r) => r[\"_measurement\"] == \"disk\" and r[\"host\"] =~ /^$Host$/,\r\n  start: -30d\r\n)\r\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": "KEAQCLm7z"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"gateway_name\",\r\n  predicate: (r) => r[\"_measurement\"] == \"gateways\" and r[\"host\"] =~ /${Host}$/,\r\n  start: -30d\r\n)\r\n",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "Gateway",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"gateway_name\",\r\n  predicate: (r) => r[\"_measurement\"] == \"gateways\" and r[\"host\"] =~ /${Host}$/,\r\n  start: -30d\r\n)\r\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "WAN",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "igb0",
            "value": "igb0"
          },
          {
            "selected": false,
            "text": "ovpnc1",
            "value": "ovpnc1"
          }
        ],
        "query": "igb0,ovpnc1",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": "KEAQCLm7z"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"interface\",\r\n  predicate: (r) => r[\"_measurement\"] == \"net\" and r[\"host\"] =~ /${Host}$/,\r\n  start: -30d\r\n)\r\n",
        "hide": 0,
        "includeAll": true,
        "label": "LAN",
        "multi": true,
        "name": "LAN_Interfaces",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"interface\",\r\n  predicate: (r) => r[\"_measurement\"] == \"net\" and r[\"host\"] =~ /${Host}$/,\r\n  start: -30d\r\n)\r\n",
        "refresh": 1,
        "regex": "/^(?!enc0$|igb0$|ovpnc1$)/",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": "KEAQCLm7z"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"cpu\",\r\n  predicate: (r) => r[\"_measurement\"] == \"cpu\" and r[\"host\"] =~ /^${Host}$/,\r\n  start: -30d\r\n)\r\n|> filter(fn: (r) => r._value != \"cpu-total\")\r\n",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "CPU",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"cpu\",\r\n  predicate: (r) => r[\"_measurement\"] == \"cpu\" and r[\"host\"] =~ /^${Host}$/,\r\n  start: -30d\r\n)\r\n|> filter(fn: (r) => r._value != \"cpu-total\")\r\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "current": {
          "selected": true,
          "text": [
            "All"
          ],
          "value": [
            "$__all"
          ]
        },
        "datasource": {
          "type": "influxdb",
          "uid": "KEAQCLm7z"
        },
        "definition": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"sensor\",\r\n  predicate: (r) => r[\"_measurement\"] == \"temperature\" and r[\"host\"] =~ /^${Host}$/,\r\n  start: -30d\r\n)\r\n",
        "hide": 0,
        "includeAll": true,
        "multi": true,
        "name": "Sensor",
        "options": [],
        "query": "import \"influxdata/influxdb/schema\"\r\nschema.tagValues(\r\n  bucket: \"pfsense\",\r\n  tag: \"sensor\",\r\n  predicate: (r) => r[\"_measurement\"] == \"temperature\" and r[\"host\"] =~ /^${Host}$/,\r\n  start: -30d\r\n)\r\n",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-15m",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "pfSense System Dashboard -Flux",
  "uid": "NQjrCYm7z",
  "version": 40,
  "weekStart": ""
}